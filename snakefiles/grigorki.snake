from pysam import FastxFile
from matplotlib.pyplot import switch_backend, subplots
from venn import venn
switch_backend("Agg")

rule combined_hmmer_kmerscan:
    input:
        v1="data/hmmer/twins-ont-2018/{subject}-{timepoint}.fq",
        v2="data/hmmer/twins-ont-2019/{subject}-{timepoint}.fq"
    output:
        densities="data/kmers/combined/{subject}-{timepoint}-{kmer}.txt"
    params:
        edge_size=600,
        window_size=120,
        cutoff=.2 # use hard cutoff if int/float, GMM if False
    threads: 24
    run:
        if wildcards.kmer == "TTAGGG":
            test_mode = "--tail-test"
        elif wildcards.kmer == "CCCTAA":
            test_mode = "--head-test"
        else:
            raise ValueError("Unsupported kmer: {}".format(wildcards.kmer))
        if isinstance(params.cutoff, (int, float)):
            cutoff_mode = "--cutoff {}".format(params.cutoff)
        else:
            cutoff_mode = ""
        shell("""
            python kmer-scan.py -j {threads} \
                --kmer {wildcards.kmer} \
                --window-size {params.window_size} \
                {test_mode} {params.edge_size} \
                {cutoff_mode} \
                {input.v1} {input.v2} \
                > {output.densities}
        """)

def names_from_txt(filename):
    with open(filename) as txt:
        return [line.strip().split()[0] for line in txt]

def names_from_fq(filename):
    with FastxFile(filename) as fastx:
        return [read.name for read in fastx]

rule threeway_venn:
    input:
        kmerscan_TTAGGG="data/kmers/combined/{subject}-{timepoint}-TTAGGG.txt",
        kmerscan_CCCTAA="data/kmers/combined/{subject}-{timepoint}-CCCTAA.txt",
        basecomp="data/basecomp/{subject}-{timepoint}.fq",
        hmmer_v1="data/hmmer/twins-ont-2018/{subject}-{timepoint}.fq",
        hmmer_v2="data/hmmer/twins-ont-2019/{subject}-{timepoint}.fq"
    output:
        png="data/plots/{subject}-{timepoint}/venn.png"
    params:
        figsize=(12, 12)
    run:
        read_sets = {
            "kmerscan": (
                set(names_from_txt(input.kmerscan_TTAGGG)) |
                set(names_from_txt(input.kmerscan_CCCTAA))
            ),
            "basecomp": set(names_from_fq(input.basecomp)),
            "hmmer": (
                set(names_from_fq(input.hmmer_v1)) |
                set(names_from_fq(input.hmmer_v2))
            )
        }
        figure, ax = subplots(figsize=params.figsize)
        venn(read_sets, ax=ax)
        figure.savefig(output.png)
