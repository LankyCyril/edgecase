from pandas import read_fwf
from io import StringIO


HG38EXT_ECX = "data/references/hg38/hg38ext.fa.ecx"
DATA_DIR = "data/datasets/GIAB-2020"
MAX_READ_LENGTH = 100000
MIN_PLOT_COVERAGE = 25
SMALLEST_P_VALUE = 5e-324

DATASETS = read_fwf(StringIO(str.strip("""
group           subject  dataset
NA12878         HG001    11kb
AshkenazimTrio  HG002    10kb
AshkenazimTrio  HG002    15kb
AshkenazimTrio  HG002    15kb_20kb
AshkenazimTrio  HG003    15kb
AshkenazimTrio  HG003    15kb_20kb
AshkenazimTrio  HG004    15kb
AshkenazimTrio  HG004    15kb_20kb
AshkenazimTrio  HG004    15kb_21kb
ChineseTrio     HG005    11kb
ChineseTrio     HG006    15kb_20kb
ChineseTrio     HG006    hifi_google
ChineseTrio     HG007    15kb_20kb
ChineseTrio     HG007    hifi_google
""")))

DATASETS["subject_pacbio_path"] = DATASETS.apply(
    lambda row: "{}/PacBio/{}/{}".format(DATA_DIR, *row[:2]), axis=1,
)
DATASETS["dataset_pacbio_path"] = DATASETS.apply(
    lambda row: "{}/PacBio/{}/{}/{}".format(DATA_DIR, *row[:3]), axis=1,
)

wildcard_constraints:
    group="[^/]+", subject="[^/]+", dataset="[^/]+", name="[^/]+",


def get_sam_flags(arm, target=None):
    if target:
        if arm == "p_arm":
            return "-f '{}' -F 'is_q|3844'".format(target)
        elif arm == "q_arm":
            return "-f 'is_q|{}' -F 3844".format(target)
        else:
            raise ValueError("arm", arm)
    else:
        if arm == "p_arm":
            return "-F 'is_q|3844'"
        elif arm == "q_arm":
            return "-f is_q -F 3844"
        else:
            raise ValueError("arm", arm)


include: "publications/methods-paper/snakefiles/longread-motifs.snake"
include: "publications/methods-paper/snakefiles/bonferroni.snake"
include: "publications/methods-paper/snakefiles/densityplots.snake"
include: "publications/methods-paper/snakefiles/levenshtein.snake"


rule densityplot_all:
    input:
        p_arm=[
            DATA_DIR+f"/PacBio/{group}/{subject}/densityplot-p_arm.pdf"
            for _, (group, subject)
            in DATASETS[["group", "subject"]].drop_duplicates().iterrows()
        ],
        q_arm=[
            DATA_DIR+f"/PacBio/{group}/{subject}/densityplot-q_arm.pdf"
            for _, (group, subject)
            in DATASETS[["group", "subject"]].drop_duplicates().iterrows()
        ],
