rule levenshtein:
    input: bam=DATA_DIR+"/PacBio/{group}/{subject}/tailpuller.bam",
    output: tsv=DATA_DIR+"/PacBio/{group}/{subject}/haplotypes/levenshtein-{arm}.tsv",
    params: directory=DATA_DIR+"/PacBio/{group}/{subject}/haplotypes/levenshtein-{arm}",
    threads: 48,
    run:
        flags = get_sam_flags(wildcards.arm, target="tract_anchor")
        shell("""
            mkdir {params.directory} 2>/dev/null || :
            ./edgecase levenshtein -j {threads} {flags} \
                --output-dir {params.directory} \
                {input.bam} > {output.tsv}
        """)


def trio_tailpuller_input(w):
    return {
        subject: f"{DATA_DIR}/PacBio/{w.group}/{subject}/tailpuller.bam"
        for subject in set(DATASETS.loc[DATASETS["group"]==w.group, "subject"])
    }

rule trio_tailpuller:
    input: unpack(trio_tailpuller_input),
    output: bam=DATA_DIR+"/PacBio/{group}/tailpuller.bam",
    params: sam=DATA_DIR+"/PacBio/{group}/tailpuller.sam", flags="-f0x4000",
    run:
        first_bam = next(iter(input))
        shell("samtools view -H {first_bam} > {params.sam}")
        for subject, bam in input.items():
            shell("""
                samtools view {params.flags} {bam} \
                    | sed -E 's/^/{subject}:/g' >> {params.sam}
            """)
        shell("samtools view -bh {params.sam} > {output.bam}")
        shell("rm {params.sam}")


def all_tailpuller_input(w):
    return {
        group: f"{DATA_DIR}/PacBio/{group}/tailpuller.bam"
        for group in set(DATASETS["group"])
    }
rule all_tailpuller:
    input: unpack(all_tailpuller_input),
    output: bam=DATA_DIR+"/PacBio/tailpuller.bam",
    params: sam=DATA_DIR+"/PacBio/tailpuller.sam", flags="-f0x4000",
    run:
        first_bam = next(iter(input))
        shell("samtools view -H {first_bam} > {params.sam}")
        for group, bam in input.items():
            shell("""
                samtools view {params.flags} {bam} \
                    | sed -E 's/^/{group}:/g' >> {params.sam}
            """)
        shell("samtools view -bh {params.sam} > {output.bam}")
        shell("rm {params.sam}")


rule all_levenshtein:
    input: bam=DATA_DIR+"/PacBio/tailpuller.bam",
    output: tsv=DATA_DIR+"/PacBio/haplotypes/levenshtein-{arm}.tsv",
    params: directory=DATA_DIR+"/PacBio/haplotypes/levenshtein-{arm}",
    threads: 96,
    run:
        flags = get_sam_flags(wildcards.arm, target="tract_anchor")
        shell("""
            mkdir {params.directory} 2>/dev/null || :
            ./edgecase levenshtein -j {threads} {flags} \
                --output-dir {params.directory} \
                {input.bam} > {output.tsv}
        """)
